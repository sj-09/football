// Generated by CoffeeScript 1.4.0
(function() {
  var cc, compiler, computecluster, syspath, utils;

  compiler = require("../compiler/compiler");

  utils = require("../util");

  syspath = require("path");

  computecluster = require('compute-cluster');

  cc = new computecluster({
    module: utils.path.join(__dirname, '_pack_worker.js'),
    max_backlog: -1
  });

  exports.usage = "合并项目文件";

  exports.set_options = function(optimist) {
    return optimist;
  };

  exports.run = function(options) {
    var conf, done, i, list, script_global, toRun, _i, _len, _results;
    script_global = {
      EXPORT_LIST: [],
      EXPORT_MAP: {}
    };
    conf = utils.config.parse(options.cwd);
    done = function() {
      conf.doRefs(options);
      conf.doScript("postpack", script_global);
      return utils.logger.log("DONE.");
    };
    conf.each_export_files(function(srcpath, parents, opts) {
      var item;
      item = {
        url: srcpath,
        path: syspath.join("src", opts.partial_path)
      };
      script_global.EXPORT_MAP[opts.partial_path] = item;
      return script_global.EXPORT_LIST.push(item);
    });
    conf.doScript("prepack", script_global);
    list = conf.get_export_list();
    toRun = list.length;
    _results = [];
    for (_i = 0, _len = list.length; _i < _len; _i++) {
      i = list[_i];
      _results.push(cc.enqueue({
        cwd: options.cwd,
        file: i
      }, function(err, r) {
        if (err) {
          utils.logger.error(err);
          cc.exit();
          utils.exit(1);
        }
        if (--toRun === 0) {
          done();
          return utils.exit(0);
        }
      }));
    }
    return _results;
  };

}).call(this);
